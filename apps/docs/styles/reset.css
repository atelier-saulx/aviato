* {
  margin: 0;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  min-height: 100%;
  min-width: 100%;
}

body,
form,
h1,
h2,
h3,
h4,
h5,
h6,
p {
  font: inherit;
}

base,
basefont,
datalist,
head,
meta,
script,
style,
title,
noembed,
param,
template {
  display: none;
}

a {
  text-decoration: none;
  color: inherit;
}

/* IMPORTANT: This removes the focus outline for most browsers. Be aware this is a backwards accessibilty step! Mozilla (i.e. Firefox) also adds a dotted outline around a tags and buttons when they receive tab focus which I haven't found an unhacky way of removing.*/
a:focus,
button:focus {
  outline: 0;
}

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  padding: 0;
}

select {
  appearance: none;
  background: none;
  border: 0;
}

ul {
  padding: 0;
  margin: 0;
}

input,
textarea,
fieldset {
  appearance: none;
  border: 0;
  padding: 0;
  color: inherit;
  margin: 0;
  border-radius: 0;
  min-width: 0;
  font: inherit;
}

input::-ms-clear {
  display: none;
}

textarea:focus,
input:focus select:focus {
  outline: none;
}

*:focus {
  outline: none;
}

input[type='number'] {
  -moz-appearance: textfield;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  appearance: none;
}

iframe {
  border: none;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

/* Scrollbar */
::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}

/* Track */
::-webkit-scrollbar-track {
  background: none;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #9e9e9e;
  border-radius: 8px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #999;
}

html,
body {
  overflow-x: hidden;
  scroll-behavior: smooth;
}

/* Create a root stacking context */
#root,
#__next {
  isolation: isolate;
}
